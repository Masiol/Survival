//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerInputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputSystem : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputSystem"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f6739730-8b26-4263-a57a-5ff55c924fc1"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""561cc6ba-c8d4-49ce-8029-46344af00fef"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""97defd85-ac63-42b3-8c96-29ee164f1164"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""0a88c8d7-c478-4ce0-b298-01ce0792f3c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""97c0d704-4c0b-4f3c-a5e9-51769e8d1349"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""f2e35519-be5c-4a59-91a0-1b4d604ae318"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""6cec88da-ec2f-46be-8310-b0d721953b6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""3eca1e36-2373-4996-a18b-74515f47ae5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pickup"",
                    ""type"": ""Button"",
                    ""id"": ""a5572d3f-3a10-4d2e-8624-7fa68c38db14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold"",
                    ""type"": ""Button"",
                    ""id"": ""42195d9d-d9d2-4e02-85aa-a2a8746541f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build"",
                    ""type"": ""Button"",
                    ""id"": ""56d3a2bc-35d7-4296-8858-f2e3acdab118"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""9f3c02aa-72e7-4540-ad07-5aabc58e084c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialUseItem"",
                    ""type"": ""Value"",
                    ""id"": ""3a168c53-51ac-47d6-879d-697d10cc45fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b749396f-a35b-4896-8bf9-bf6cdcb1d586"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1694ea82-cce2-4ffa-b5f9-cfc585461c0d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ff535530-caa9-406c-a50d-d0885c2fbc11"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ec7c9a40-c9bc-410c-993d-892f23736101"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""905d97b6-8bd3-454c-9e42-4db77672bba4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""77533546-5b50-4a3d-8684-678bf5d091cc"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""997f9caf-1880-4766-bf84-b583be7ea0e0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29aca22f-7538-4701-a843-256ad21c2383"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""beaca39b-8e2e-4116-883c-cdae1574a497"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb208f2d-1ec7-45f3-9eb0-0a3d5b103218"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e9b1a00-1b43-4c8d-8e7e-3fb57fa6912d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38886a43-05a3-4f48-a09d-53b1794666b8"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb80bf30-0fec-4f9b-8c5e-5e7d2e66f8d3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c8dee3e-b502-4e23-8731-6a9f7a0cb352"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77b699aa-6182-4c6e-a6c7-c748fa8f6534"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialUseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""357959b0-3507-4cff-8a5c-f0383cc68d57"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Build"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""0eb82e2e-71bb-4ec9-8454-1942298ae6cf"",
            ""actions"": [
                {
                    ""name"": ""Key1"",
                    ""type"": ""Button"",
                    ""id"": ""d774f3c7-6b26-4146-88f0-6dbdc575a3c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key2"",
                    ""type"": ""Button"",
                    ""id"": ""fbcd6a9a-3461-426a-a285-3297ef7fdd2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key3"",
                    ""type"": ""Button"",
                    ""id"": ""66461d0e-223e-4c49-b520-50e126cf85f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key4"",
                    ""type"": ""Button"",
                    ""id"": ""e88dc0c5-6793-4f1a-ac4b-018c7e4c7467"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key5"",
                    ""type"": ""Button"",
                    ""id"": ""cf7bc8f0-4796-4b92-85e8-4ce6a7bbdc88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key6"",
                    ""type"": ""Button"",
                    ""id"": ""b5632abe-4c03-499c-97dc-0e15399a93cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key7"",
                    ""type"": ""Button"",
                    ""id"": ""08ec2d22-0ae4-4309-b444-81622b986e7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryDropItem "",
                    ""type"": ""Button"",
                    ""id"": ""78c45ca4-3590-4dbb-bdc1-65fac0c72ffe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f8c87bb2-2afa-4c00-b13a-a489b02c6f70"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caa058f9-6a63-45d2-b933-baa651e97bb0"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7709d38-4cad-43e2-a75f-448e53e885b1"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eadb6684-6a8f-4192-a83c-8e3b557d482e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98ee3f6d-67a1-467f-a721-10abe91ac2e5"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d640f518-a2b6-43d4-b0f6-bffb4154a57a"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2628812-eaa0-43c6-927f-9c0777fed21b"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d397ace-90e9-4a42-bce5-2720b7f054e7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryDropItem "",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Inventory = m_Player.FindAction("Inventory", throwIfNotFound: true);
        m_Player_Escape = m_Player.FindAction("Escape", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Pickup = m_Player.FindAction("Pickup", throwIfNotFound: true);
        m_Player_Hold = m_Player.FindAction("Hold", throwIfNotFound: true);
        m_Player_Build = m_Player.FindAction("Build", throwIfNotFound: true);
        m_Player_UseItem = m_Player.FindAction("UseItem", throwIfNotFound: true);
        m_Player_SpecialUseItem = m_Player.FindAction("SpecialUseItem", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Key1 = m_UI.FindAction("Key1", throwIfNotFound: true);
        m_UI_Key2 = m_UI.FindAction("Key2", throwIfNotFound: true);
        m_UI_Key3 = m_UI.FindAction("Key3", throwIfNotFound: true);
        m_UI_Key4 = m_UI.FindAction("Key4", throwIfNotFound: true);
        m_UI_Key5 = m_UI.FindAction("Key5", throwIfNotFound: true);
        m_UI_Key6 = m_UI.FindAction("Key6", throwIfNotFound: true);
        m_UI_Key7 = m_UI.FindAction("Key7", throwIfNotFound: true);
        m_UI_InventoryDropItem = m_UI.FindAction("InventoryDropItem ", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Inventory;
    private readonly InputAction m_Player_Escape;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Pickup;
    private readonly InputAction m_Player_Hold;
    private readonly InputAction m_Player_Build;
    private readonly InputAction m_Player_UseItem;
    private readonly InputAction m_Player_SpecialUseItem;
    public struct PlayerActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PlayerActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Inventory => m_Wrapper.m_Player_Inventory;
        public InputAction @Escape => m_Wrapper.m_Player_Escape;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Pickup => m_Wrapper.m_Player_Pickup;
        public InputAction @Hold => m_Wrapper.m_Player_Hold;
        public InputAction @Build => m_Wrapper.m_Player_Build;
        public InputAction @UseItem => m_Wrapper.m_Player_UseItem;
        public InputAction @SpecialUseItem => m_Wrapper.m_Player_SpecialUseItem;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Run.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Inventory.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInventory;
                @Escape.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEscape;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Pickup.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickup;
                @Pickup.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickup;
                @Pickup.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickup;
                @Hold.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHold;
                @Hold.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHold;
                @Hold.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHold;
                @Build.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuild;
                @Build.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuild;
                @Build.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuild;
                @UseItem.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseItem;
                @UseItem.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseItem;
                @UseItem.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseItem;
                @SpecialUseItem.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialUseItem;
                @SpecialUseItem.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialUseItem;
                @SpecialUseItem.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialUseItem;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Pickup.started += instance.OnPickup;
                @Pickup.performed += instance.OnPickup;
                @Pickup.canceled += instance.OnPickup;
                @Hold.started += instance.OnHold;
                @Hold.performed += instance.OnHold;
                @Hold.canceled += instance.OnHold;
                @Build.started += instance.OnBuild;
                @Build.performed += instance.OnBuild;
                @Build.canceled += instance.OnBuild;
                @UseItem.started += instance.OnUseItem;
                @UseItem.performed += instance.OnUseItem;
                @UseItem.canceled += instance.OnUseItem;
                @SpecialUseItem.started += instance.OnSpecialUseItem;
                @SpecialUseItem.performed += instance.OnSpecialUseItem;
                @SpecialUseItem.canceled += instance.OnSpecialUseItem;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Key1;
    private readonly InputAction m_UI_Key2;
    private readonly InputAction m_UI_Key3;
    private readonly InputAction m_UI_Key4;
    private readonly InputAction m_UI_Key5;
    private readonly InputAction m_UI_Key6;
    private readonly InputAction m_UI_Key7;
    private readonly InputAction m_UI_InventoryDropItem;
    public struct UIActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Key1 => m_Wrapper.m_UI_Key1;
        public InputAction @Key2 => m_Wrapper.m_UI_Key2;
        public InputAction @Key3 => m_Wrapper.m_UI_Key3;
        public InputAction @Key4 => m_Wrapper.m_UI_Key4;
        public InputAction @Key5 => m_Wrapper.m_UI_Key5;
        public InputAction @Key6 => m_Wrapper.m_UI_Key6;
        public InputAction @Key7 => m_Wrapper.m_UI_Key7;
        public InputAction @InventoryDropItem => m_Wrapper.m_UI_InventoryDropItem;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Key1.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey1;
                @Key1.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey1;
                @Key1.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey1;
                @Key2.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey2;
                @Key2.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey2;
                @Key2.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey2;
                @Key3.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey3;
                @Key3.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey3;
                @Key3.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey3;
                @Key4.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey4;
                @Key4.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey4;
                @Key4.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey4;
                @Key5.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey5;
                @Key5.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey5;
                @Key5.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey5;
                @Key6.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey6;
                @Key6.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey6;
                @Key6.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey6;
                @Key7.started -= m_Wrapper.m_UIActionsCallbackInterface.OnKey7;
                @Key7.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnKey7;
                @Key7.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnKey7;
                @InventoryDropItem.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryDropItem;
                @InventoryDropItem.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryDropItem;
                @InventoryDropItem.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInventoryDropItem;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Key1.started += instance.OnKey1;
                @Key1.performed += instance.OnKey1;
                @Key1.canceled += instance.OnKey1;
                @Key2.started += instance.OnKey2;
                @Key2.performed += instance.OnKey2;
                @Key2.canceled += instance.OnKey2;
                @Key3.started += instance.OnKey3;
                @Key3.performed += instance.OnKey3;
                @Key3.canceled += instance.OnKey3;
                @Key4.started += instance.OnKey4;
                @Key4.performed += instance.OnKey4;
                @Key4.canceled += instance.OnKey4;
                @Key5.started += instance.OnKey5;
                @Key5.performed += instance.OnKey5;
                @Key5.canceled += instance.OnKey5;
                @Key6.started += instance.OnKey6;
                @Key6.performed += instance.OnKey6;
                @Key6.canceled += instance.OnKey6;
                @Key7.started += instance.OnKey7;
                @Key7.performed += instance.OnKey7;
                @Key7.canceled += instance.OnKey7;
                @InventoryDropItem.started += instance.OnInventoryDropItem;
                @InventoryDropItem.performed += instance.OnInventoryDropItem;
                @InventoryDropItem.canceled += instance.OnInventoryDropItem;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPickup(InputAction.CallbackContext context);
        void OnHold(InputAction.CallbackContext context);
        void OnBuild(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnSpecialUseItem(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnKey1(InputAction.CallbackContext context);
        void OnKey2(InputAction.CallbackContext context);
        void OnKey3(InputAction.CallbackContext context);
        void OnKey4(InputAction.CallbackContext context);
        void OnKey5(InputAction.CallbackContext context);
        void OnKey6(InputAction.CallbackContext context);
        void OnKey7(InputAction.CallbackContext context);
        void OnInventoryDropItem(InputAction.CallbackContext context);
    }
}
